
package yj.core.webservice.sender;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */


import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 3.1.11
 * 2017-06-14T16:11:55.193+08:00
 * Generated source version: 3.1.11
 * 
 */
public final class SIPP001SenderSync_HTTPSPort_Client {

    private static final QName SERVICE_NAME = new QName("http://www.cq-yj.com/HAP/PP001/Sender", "SI_PP001_Sender_SyncService");

    private SIPP001SenderSync_HTTPSPort_Client() {
    }

    /*public static void main(String args[]) throws Exception {
        URL wsdlURL = SIPP001SenderSyncService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        SIPP001SenderSyncService ss = new SIPP001SenderSyncService(wsdlURL, SERVICE_NAME);
        SIPP001SenderSync port = ss.getHTTPSPort();


        // Set credentials
        Map<String, Object> reqCtxt = ((javax.xml.ws.BindingProvider) port).getRequestContext();
        reqCtxt.put(javax.xml.ws.BindingProvider.USERNAME_PROPERTY, "hand");
        reqCtxt.put(javax.xml.ws.BindingProvider.PASSWORD_PROPERTY, "h@nd1234");


        {
            System.out.println("Invoking siPP001SenderSync...");

            DTPP001SendReq _siPP001SenderSync_mtPP001SendReq = new DTPP001SendReq();

            DTPP001SendRes _siPP001SenderSync__return = port.siPP001SenderSync(_siPP001SenderSync_mtPP001SendReq);
            System.out.println("siPP001SenderSync.result=" + _siPP001SenderSync__return.getRETURN().getMESSAGE());


        }

        System.exit(0);
    }
*/
}
